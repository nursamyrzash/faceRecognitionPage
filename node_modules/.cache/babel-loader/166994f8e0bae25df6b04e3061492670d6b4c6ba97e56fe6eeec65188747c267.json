{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/facerecognitionapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Clarifai from 'clarifai';\nimport Logo from './components/logo/Logo';\nimport Rank from './components/rank/Rank';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport './App.css';\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'a66b4c30776d416c937624cf45632baa'\n});\n\n// const particlesOptions = {\n//   particles: {\n//     numbers: {\n//       values: 30,\n//       density: {\n//         enable: true,\n//         value_area: 800\n//       }\n//     }\n//   }\n// }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      console.log('click');\n\n      // URL of image to use. Change this to your image.\n      const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": \"clarifai\",\n          \"app_id\": \"main\"\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": IMAGE_URL\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + 'YOUR_PAT_HERE'\n        },\n        body: raw\n      };\n\n      // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\n      fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"square\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Clarifai","Logo","Rank","ImageLinkForm","ParticlesBg","jsxDEV","_jsxDEV","app","App","apiKey","constructor","onInputChange","event","console","log","target","value","onButtonSubmit","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","catch","error","state","input","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/admin/Desktop/facerecognitionapp/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Clarifai from 'clarifai';\nimport Logo from './components/logo/Logo';\nimport Rank from './components/rank/Rank';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport './App.css';\nimport ParticlesBg from 'particles-bg';\n\nconst app = new Clarifai.App({\n  apiKey: 'a66b4c30776d416c937624cf45632baa'\n });\n\n// const particlesOptions = {\n//   particles: {\n//     numbers: {\n//       values: 30,\n//       density: {\n//         enable: true,\n//         value_area: 800\n//       }\n//     }\n//   }\n// }\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);  \n  }\n\n  onButtonSubmit = () => {\n    console.log('click');\n\n    // URL of image to use. Change this to your image.\n    const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n        \"user_id\": \"clarifai\",\n        \"app_id\": \"main\"\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": IMAGE_URL\n                  }\n              }\n          }\n      ]\n    });\n\nconst requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + 'YOUR_PAT_HERE'\n    },\n    body: raw\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n  \n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <ParticlesBg type='square'\n          bg={true}\n          />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit = {this.onButtonSubmit}\n          />\n        {/*<FaceRecognition /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAG,IAAIP,QAAQ,CAACQ,GAAG,CAAC;EAC3BC,MAAM,EAAE;AACT,CAAC,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMD,GAAG,SAASV,SAAS,CAAC;EAC1BY,WAAWA,CAAA,EAAE;IACX,KAAK,CAAC,CAAC;IAAC,KAMVC,aAAa,GAAIC,KAAK,IAAK;MACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IACjC,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAM;MACrBJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;;MAEpB;MACA,MAAMI,SAAS,GAAG,8CAA8C;MAEhE,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;QACzB,aAAa,EAAE;UACb,SAAS,EAAE,UAAU;UACrB,QAAQ,EAAE;QACZ,CAAC;QACD,QAAQ,EAAE,CACN;UACI,MAAM,EAAE;YACJ,OAAO,EAAE;cACL,KAAK,EAAEH;YACX;UACJ;QACJ,CAAC;MAEP,CAAC,CAAC;MAEN,MAAMI,cAAc,GAAG;QACnBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,eAAe,EAAE,MAAM,GAAG;QAC9B,CAAC;QACDC,IAAI,EAAEN;MACV,CAAC;;MAED;MACA;MACA;;MAEAO,KAAK,CAAE,qGAAoG,EAAEJ,cAAc,CAAC,CACvHK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIjB,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAInB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEkB,KAAK,CAAC,CAAC;IAE9C,CAAC;IAjDC,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;EACH;EAgDAC,MAAMA,CAAA,EAAE;IACN,oBACE7B,OAAA;MAAK8B,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClB/B,OAAA,CAACF,WAAW;QAACkC,IAAI,EAAC,QAAQ;QACxBC,EAAE,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACJrC,OAAA,CAACP,UAAU;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdrC,OAAA,CAACL,IAAI;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRrC,OAAA,CAACJ,IAAI;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACRrC,OAAA,CAACH,aAAa;QACZQ,aAAa,EAAE,IAAI,CAACA,aAAc;QAClCM,cAAc,EAAI,IAAI,CAACA;MAAe;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAEV;AACF;AAEA,eAAenC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}